type SalesStatData{
    totalYearlySales:Float
    totalYearlyUnitsSold:Int
    totalMonthlySales:Float
    totalMonthlyUnitsSold:Int
    totalDailySales:Float
    totalDailyUnitsSold:Int
    monthlyData:[MonthlyData]

}

# Data
type MonthlyData{
	month:String
	totalSales:Float
	totalUnits:Int
}
type DailySalesData{
    date:Time
    totalSales:Float
    totalUnits:Int
}
type SalesBreakdownData{
    categoryName:String
    totalSales:Float
}
type SalesDataByStaffs{
    staffName:String
    totalSales:Float
    totalUnits:Int
}
type DashboardSalesData{
    totalYearlySales:Float
    totalMonthlySales:Float
    totalWeeklySales:Float
    totalDailySales:Float
}
type ProductSalesStat{
    productName:String
    categoryName:String
    totalUnits:Int
}


# Input
input SalesBreakDownInput{
    filterType:SalesInfoType!
}
input ProductSalesInput{
    filterType:SalesInfoType!
    orderBy:ProductSalesType!
}

# Response
type DailySalesQueryResponse{
    data:[DailySalesData]
    error:QueryError
}

type SalesStatQueryResponse{
    data:SalesStatData
    error:QueryError
}
type DashboardDataQueryResponse{
    data:DashboardSalesData
    error:QueryError
}

type SalesBreakDownQueryResponse{
    data:[SalesBreakdownData]
    error:QueryError
}
type SalesDataByStaffQueryResponse{
    data:[SalesDataByStaffs]
    error:QueryError
}

type ProductSalesQueryResponse{
    data:[ProductSalesStat]
    error:QueryError
}