package resolvers

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.35

import (
	"backend/exception"
	"backend/graph/generated"
	"backend/graph/model"
	"context"
	"fmt"
)

// CreatedBy is the resolver for the createdBy field.
func (r *organizationResolver) CreatedBy(ctx context.Context, obj *model.Organization) (*model.User, error) {
	if obj.CreatedByID != "" {
		return r.AuthDomain.GetUserByID(ctx, &obj.CreatedByID)
	}
	return nil, nil
}

// CreateOrganization is the resolver for the createOrganization field.
func (r *organizationMutationResolver) CreateOrganization(ctx context.Context, obj *model.OrganizationMutation, input model.CreateOrganizationInput) (*model.OrganizationMutationResponse, error) {
	user := UserForContext(ctx)
	err := CheckLoggedIn(user)
	if err != nil {
		return &model.OrganizationMutationResponse{
			Error: exception.MutationErrorHandler(ctx, err, exception.AUTHORIZATION, nil),
		}, nil
	}
	return r.OrganizationDomain.CreateOrganization(ctx, &input, user)
}

// GetOrganizationByID is the resolver for the getOrganizationByID field.
func (r *organizationQueryResolver) GetOrganizationByID(ctx context.Context, obj *model.OrganizationQuery, input model.OrganizationInput) (*model.OrganizationQueryResponse, error) {
	// user := UserForContext(ctx)
	// err := CheckLoggedIn(user)
	// if err != nil {
	// 	return &model.OrganizationMutationResponse{
	// 		Error: exception.MutationErrorHandler(ctx, err, exception.AUTHORIZATION, nil),
	// 	}, nil
	// }
	return r.OrganizationDomain.GetOrganizationByID(ctx, &input)
}

// GetOrganizationByFilter is the resolver for the getOrganizationByFilter field.
func (r *organizationQueryResolver) GetOrganizationByFilter(ctx context.Context, obj *model.OrganizationQuery, input *model.OrganizationFilterInput) (*model.OrganizationsQueryResponse, error) {
	panic(fmt.Errorf("not implemented: GetOrganizationByFilter - getOrganizationByFilter"))
}

// Organization returns generated.OrganizationResolver implementation.
func (r *Resolver) Organization() generated.OrganizationResolver { return &organizationResolver{r} }

// OrganizationMutation returns generated.OrganizationMutationResolver implementation.
func (r *Resolver) OrganizationMutation() generated.OrganizationMutationResolver {
	return &organizationMutationResolver{r}
}

// OrganizationQuery returns generated.OrganizationQueryResolver implementation.
func (r *Resolver) OrganizationQuery() generated.OrganizationQueryResolver {
	return &organizationQueryResolver{r}
}

type organizationResolver struct{ *Resolver }
type organizationMutationResolver struct{ *Resolver }
type organizationQueryResolver struct{ *Resolver }
