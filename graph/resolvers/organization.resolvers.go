package resolvers

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.35

import (
	"backend/graph/generated"
	"backend/graph/model"
	"context"
	"fmt"
)

// CreateOrganization is the resolver for the createOrganization field.
func (r *organizationMutationResolver) CreateOrganization(ctx context.Context, obj *model.OrganizationMutation, input model.CreateOrganizationInput) (*model.OrganizationMutationResponse, error) {
	panic(fmt.Errorf("not implemented: CreateOrganization - createOrganization"))
}

// GetOrganizationByID is the resolver for the getOrganizationByID field.
func (r *organizationQueryResolver) GetOrganizationByID(ctx context.Context, obj *model.OrganizationQuery, input model.OrganizationInput) (*model.OrganizationQueryResponse, error) {
	panic(fmt.Errorf("not implemented: GetOrganizationByID - getOrganizationByID"))
}

// GetOrganizationByFilter is the resolver for the getOrganizationByFilter field.
func (r *organizationQueryResolver) GetOrganizationByFilter(ctx context.Context, obj *model.OrganizationQuery, input *model.OrganizationFilterInput) (*model.OrganizationsQueryResponse, error) {
	panic(fmt.Errorf("not implemented: GetOrganizationByFilter - getOrganizationByFilter"))
}

// OrganizationMutation returns generated.OrganizationMutationResolver implementation.
func (r *Resolver) OrganizationMutation() generated.OrganizationMutationResolver {
	return &organizationMutationResolver{r}
}

// OrganizationQuery returns generated.OrganizationQueryResolver implementation.
func (r *Resolver) OrganizationQuery() generated.OrganizationQueryResolver {
	return &organizationQueryResolver{r}
}

type organizationMutationResolver struct{ *Resolver }
type organizationQueryResolver struct{ *Resolver }
