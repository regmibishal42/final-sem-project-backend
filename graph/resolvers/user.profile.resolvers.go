package resolvers

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.35

import (
	"backend/exception"
	"backend/graph/generated"
	"backend/graph/model"
	"context"
	"errors"
	"fmt"
)

// CreateProfile is the resolver for the createProfile field.
func (r *profileMutationResolver) CreateProfile(ctx context.Context, obj *model.ProfileMutation, input model.CreateProfileInput) (*model.ProfileMutationResponse, error) {
	panic(fmt.Errorf("not implemented: CreateProfile - createProfile"))
}

// UpdateProfile is the resolver for the updateProfile field.
func (r *profileMutationResolver) UpdateProfile(ctx context.Context, obj *model.ProfileMutation, input model.UpdateProfileInput) (*model.ProfileMutationResponse, error) {
	user := UserForContext(ctx)
	err := CheckLoggedIn(user)
	if err != nil {
		return &model.ProfileMutationResponse{
			Error: exception.MutationErrorHandler(ctx, errors.New("not authenticated"), exception.AUTHORIZATION, nil),
		}, nil
	}
	return r.AuthDomain.UpdateProfileInformation(ctx, user, &input)
}

// GetProfile is the resolver for the getProfile field.
func (r *profileQueryResolver) GetProfile(ctx context.Context, obj *model.ProfileQuery, input *model.GetByIDInput) (*model.ProfileQueryResponse, error) {
	panic(fmt.Errorf("not implemented: GetProfile - getProfile"))
}

// ProfileMutation returns generated.ProfileMutationResolver implementation.
func (r *Resolver) ProfileMutation() generated.ProfileMutationResolver {
	return &profileMutationResolver{r}
}

// ProfileQuery returns generated.ProfileQueryResolver implementation.
func (r *Resolver) ProfileQuery() generated.ProfileQueryResolver { return &profileQueryResolver{r} }

type profileMutationResolver struct{ *Resolver }
type profileQueryResolver struct{ *Resolver }
